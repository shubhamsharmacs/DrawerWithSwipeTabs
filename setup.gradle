def projectDir = file(new File('eDirectory'), PathValidation.DIRECTORY)
def androidManifest = file(new File(projectDir, 'src/main/AndroidManifest.xml'))
def mainJavaSrc = file(new File(projectDir, 'src/main/java'), PathValidation.DIRECTORY)
def mainJavaRes = file(new File(projectDir, 'src/main/res'), PathValidation.DIRECTORY)
def stringsXmlFile = file(new File(mainJavaRes, 'values/strings.xml'))
def releaseKeystore = file(new File(projectDir, 'certified.jks'))

def appName = 'Betorcs App'

ant.taskdef (
    name: 'xmltask',
    classname: 'com.oopsconsultancy.xmltask.ant.XmlTask',
    classpath: 'libs/xmltask.jar'
)


task changePackageName << {

    if (ant.properties.newPackageName == null) {
        ant.echo(message: 'It is missing property: newPackageName')
        return
    }

    println '\nMakes following changes on AndroidManifest.xml:'
    println '\t- Replaces package name.'
    println '\t- Replaces map permission.'
    println '\t- Replaces map users permission.'

    ant.xmltask (
            encoding: 'UTF-8',
            source: androidManifest.absolutePath,
            dest: androidManifest.absolutePath
    ) {
        // Get the current package name.
        copy (
                path: '/manifest/@package',
                property: 'oldPackageName'
        )

        // Replace package name
        replace (
                path: '/manifest/@package',
                withText: newPackageName
        )

        // Replace map receiver permission
        replace (
                path: '/manifest/permission[@android:name=\'com.arcasolutions.permission.MAPS_RECEIVE\']/@android:name',
                withText: newPackageName + '.permission.MAPS_RECEIVE'
        )

        // Repalce map uses permission
        replace (
                path: '/manifest/uses-permission[@android:name=\'com.arcasolutions.permission.MAPS_RECEIVE\']/@android:name',
                withText: newPackageName + '.permission.MAPS_RECEIVE'
        )
    }

    println '\nMakes following java code refactor:'
    println '\t- Moves ' + ant.properties.oldPackageName + '.R to ' + ant.properties.newPackageName + '.R'
    println '\t- Moves ' + ant.properties.oldPackageName + '.BuildConfig to ' + ant.properties.newPackageName + '.BuildConfig'

    ant.replace (
            encoding: 'UTF-8',
            dir: mainJavaSrc.absolutePath,
            value: ant.properties.newPackageName + '.R'
    ) {
        include (name: '**/*.java')
        replacefilter (
                token: ant.properties.oldPackageName + '.R',
                value: ant.properties.newPackageName + '.R'
        )}

    ant.replace (
            encoding: 'UTF-8',
            dir: mainJavaSrc.absolutePath,
            value: ant.properties.newPackageName + '.BuildConfig'
    ) {
        include (name: '**/*.java')
        replacefilter (
                token: ant.properties.oldPackageName + '.BuildConfig',
                value: ant.properties.newPackageName + '.BuildConfig'
        )}
}




task changeAboutInformation << {

    if (ant.properties.appAboutTitle == null
            || ant.properties.appAboutDescription == null
            || ant.properties.appAboutWebsite == null
            || ant.properties.appAboutEmail == null
            || ant.properties.appAboutPhone == null) {

        ant.echo(message: 'The following properties must be set: ' +
                '\n - appAboutTitle' +
                '\n - appAboutDescription' +
                '\n - appAboutWebsite' +
                '\n - appAboutEmail' +
                '\n - appAboutPhone')
        return
    }

    ant.xmltask (
            encoding: 'UTF-8',
            source: stringsXmlFile.absolutePath,
            dest: stringsXmlFile.absolutePath
        ) {

        // Changes about title
        replace ( path: '/resources/string[@name=\'about_title\']/text()', withText: ant.properties.appAboutTitle )

        // Changes about description
        replace ( path: '/resources/string[@name=\'about_description\']/text()', withText: ant.properties.appAboutDescription )

        // Changes about web site
        replace ( path: '/resources/string[@name=\'about_website_url\']/text()', withText: ant.properties.appAboutWebsite )

        // Chages about email
        replace ( path: '/resources/string[@name=\'about_email_contact\']/text()', withText: ant.properties.appAboutEmail )

        // Chages about phone
        replace ( path: '/resources/string[@name=\'about_telephone\']/text()', withText: ant.properties.appAboutPhone )

    }

}

task changeApplicationName << {
    ant.replace (
            dir: mainJavaRes.absolutePath,
            value: appName
        ) {
        include (name: '**/strings.xml')
        replacefilter (token: 'eDirectory', value: appName)
    }
}



// Creates a keystore if needed
task createKeystoreIfNeeded << {

    if (!releaseKeystore.exists())
    {
        ant.genkey(
                alias: 'release',
                storepass: 'arcarelease',
                keypass: 'arcarelease',
                keystore: releaseKeystore.absolutePath,
                validity: 10 * 365,
                sigalg: 'MD5withRSA',
                keyalg: 'RSA',
                storetype: 'JKS',
                dname: 'CN=Arca Solutions Inc,O=eDirectory,C=US',
                keysize: 2048
        )
    }

}

