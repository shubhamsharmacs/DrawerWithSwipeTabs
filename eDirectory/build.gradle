buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
    }
}
apply plugin: 'android'

repositories {
    mavenCentral()
}

configurations {
    apt
}

dependencies {

    compile project(':libraries:StaggeredGridView')

    //compile files('libs/lombok-api.jar')

    // android libraries
    compile 'com.android.support:appcompat-v7:19.0.0'
    compile 'com.android.support:support-v4:19.0.0'

    // google libraries
    compile 'com.google.android.gms:play-services:4.0.30'

    // guava
    compile 'com.google.guava:guava:15.0'

    // spring for android
    compile 'org.springframework.android:spring-android-rest-template:1.0.1.RELEASE'

    compile ('org.springframework.android:spring-android-auth:1.0.1.RELEASE') {
        exclude group: 'org.springframework.security', module: 'spring-security-crypto'
    }

    compile ('org.springframework.security:spring-security-crypto:3.1.3.RELEASE') {
        exclude group: 'org.springframework', module: 'spring-core'
    }
    compile ('org.springframework.social:spring-social-facebook:1.0.3.RELEASE') {
        exclude group: 'org.springframework', module: 'spring-web'
    }

    // Android Query
    compile 'com.googlecode.android-query:android-query:0.24.3'

    // Jackson
    compile 'com.fasterxml.jackson.core:jackson-databind:2.1.2'

    // PhotoView (zoom)
    compile 'com.github.chrisbanes.photoview:library:1.2.1'

    // Orm Lite
    compile 'com.j256.ormlite:ormlite-android:4.25'


    // lombok
    compile 'org.projectlombok:lombok:0.12.0'

}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.0"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 19
    }

    packagingOptions {
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

android.applicationVariants.each { variant ->
    aptOutput = file("${project.buildDir}/source/apt_generated/${variant.dirName}")
    println "****************************"
    println "variant: ${variant.name}"
    println "manifest:  ${variant.processResources.manifestFile}"
    println "aptOutput:  ${aptOutput}"
    println "****************************"

    variant.javaCompile.doFirst {
        println "*** compile doFirst ${variant.name}"
        aptOutput.mkdirs()
        variant.javaCompile.options.compilerArgs += [
                '-processorpath', configurations.apt.getAsPath(),
                '-AandroidManifestFile=' + variant.processResources.manifestFile,
                '-s', aptOutput
        ]
    }
}


